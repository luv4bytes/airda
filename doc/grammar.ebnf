program = statement, {statement};

moduleDeclaration = "Mod", identifier;

statement = variableDeclaration
            | variableDeclarationInit;

variableAssignment = identifier, assignment, expression;

variableDeclarationInit = identifier, typeSpecifier, typeIdentifier, assignment, expression, endOfStatment;

assignment = "=";

expression = unaryOperator, expressionP
            | "(", expression, ")"
            | expressionP;

expressionP = numericLiteral
            | identifier
            | expression, binaryOperator, expressionP;

binaryOperator = "+" | "-" | "*" | "/";

unaryOperator = "-";

variableDeclaration = identifier, typeSpecifier, typeIdentifier, endOfStatment;

endOfStatment = ";";

typeSpecifier = ":";

typeIdentifier = identifier;

identifier = unicodeChar, {(digit | unicodeChar | "_")};

unicodeChar = ? unicode character ?;

numericLiteral = integer | decimal;

integer = (["-"], digitNoNull, {digit}) | "0";

decimal = (["-"], {digit}, ".", digit, {digit}) | {digit};

digit = "0" | "1" | "2" | "3" | "4" 
            | "5" | "6" | "7" | "8" | "9";

digitNoNull = "1" | "2" | "3" | "4" 
                  | "5" | "6" | "7" | "8" | "9";
